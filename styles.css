/* Clicking on the navigation links should jump the viewport to the relevant section. However, this jumping can be disorienting for some users.

Select all elements, and set the scroll-behavior to smooth. */
/* Certain types of motion-based animations can cause discomfort for some users. In particular, people with vestibular disorders have sensitivity to certain motion triggers.
 Wrap the style rule that sets scroll-behavior: smooth within an @media at-rule with the media feature prefers-reduced-motion having no-preference set as the value.*/

@media (prefers-reduced-motion: no-preference) {
  * {
    scroll-behavior: smooth;
  }
}

body {
  background: #f5f6f7;
  color: #1b1b32;
  font-family: Helvetica;
  margin: 0;
}

header {
  width: 100%;
  height: 50px;
  background-color: #1b1b32;
  display: Flex;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  top: 0;
}

#logo {
  width: max(100px, 18vw);
  background-color: #0a0a23;
  aspect-ratio: 35 / 4;
  padding: 0.4rem;
}

/* Changing h1 properties */
h1 {
  color: #f1be32;
  font-size: min(5vw, 1.2em);
  text-align: center;
}

nav {
  width: 50%;
  max-width: 300px;
  height: 50px;
}

/* > selector to target the unordered list elements within the nav elements, and use Flexbox to evenly space the children. */
nav > ul {
  display: flex;
  justify-content: space-evenly;
  /* On small screens, the unordered list in the navigation bar overflows the right side of the screen.

Fix this by using Flexbox to wrap the ul content. Then, set the following CSS properties to correctly align the text: */
  flex-wrap: wrap;
  align-items: center;
  padding-inline-start: 0;
  margin-block: 0;
  height: 100%;
}
/* for  nav button ul >> li items */
nav > ul > li {
  color: #dfdfe2;
  margin: 0 0.2rem;
  padding: 0.2rem;
  display: block;
}

/* To make the navigation buttons look more like typical buttons,

Then, create a new selector targeting the navigation list elements so that when the cursor hovers over them, the background color and text color are switched, and the cursor becomes a pointer. */

nav > ul > li:hover {
  background-color: #f1be32;
  color: #1b1b32;
  cursor: pointer;
}

/* Change the font color of all the anchor elements within the list elements to something with a contrast ratio of at least 7:1. */
/* li > a {
  color: #323280;
} */
/* nav buttons(removing underlines from button text) */
li > a {
  /* inherit (geeting the same color from above nav (dfdfe2) */
  color: inherit;
  text-decoration: none;
}

/* As student-info is not overlapping and not correctly visible */
main {
  padding-top: 50px;
}

/* adding properties to section elements */
section {
  width: 80%;
  margin: 0 auto 10px auto;
  max-width: 600px;
}
h1,
h2 {
  font-family: Verdana, sans-serif;
}

h2 {
  border-bottom: 4px solid #dfdfe2;
  margin-top: 0;
  padding-top: 60px;
}
/* Addding properties to div class=info */
.info {
  padding: 10px 0 0 5px;
}

/* Adding properties for section(css) class=formrw */
.formrow {
  padding-right: 1px;
  padding-top: 0;
  padding-left: 1px;
  margin-top: 1px;
  padding-bottom: 0;
}

/* Input element font-size*/

input {
  font-size: 16px;
}

/* Adding properties to all elements */
.info label,
.info input {
  display: inline-block;
}

/* Adding propertise to both info & input elements */
.info input {
  width: 50%;
  text-align: left;
}
/* Adding propertise to both info & label elements */
.info label {
  width: 10%;
  min-width: 55px;
}

/* To neaten the .question-block elements, set the following CSS properties: */
.question-block {
  text-align: left;
  display: block;
  width: 100%;
  margin-top: 20px;
  padding-top: 5px;
}

/*  Make the paragraph elements appear as a higher priority, with the following CSS properties:*/
p {
  margin-top: 5px;
  padding-left: 15px;
  font-size: 20px;
}

/* it automatically places (question #_)before p element */
p::before {
  content: "Question #";
}

/* Adding propertise to class=question */
.question {
  border: none;
  padding-bottom: 0;
}

/* Removing dot(.) before radio buttons */
.answers-list {
  list-style: none;
  padding: 0;
}

/* Adding propertise to submit button element */
button {
  display: block;
  margin: 40px auto;
  width: 40%;
  padding: 15px;
  font-size: 23px;
  background: #d0d0d5;
  border: 3px solid #3b3b4f;
}

/* Adding propertise to footer tag */
footer {
  background: #2a2a40;
  display: flex;
  justify-content: center;
}

/* adding popertise to both footer ad within a elements */
footer,
footer a {
  color: #dfdfe2;
}

/* Adding propertise to address tag */
address {
  text-align: center;
  padding-top: 1px;
  padding-right: 1px;
  padding-bottom: 1px;
  padding-left: 1px;
}

/* The .sr-only text is still visible. There is a common pattern to visually hide text for only screen readers to read.

This pattern is to set the following CSS properties: */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
